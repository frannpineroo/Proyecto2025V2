@page "/chat/editar"
@inject IChatServicio http
@inject NavigationManager navHttp
@inject HttpClient Http
<h3>Editar Chat</h3>


@* <EditForm Model="chat" OnValidSubmit="Editar" FormName="EditarChatForm"> *@

<DataAnnotationsValidator />
<ValidationSummary />

@* <div class="form-group">
        <label>Id</label>
        <div>
        <InputNumber class="form-control" @bind-Value="chat.Id" />
        <ValidationMessage For="@(() => chat.Id)" />
        </div>
    </div> *@

<div class="form-group">
    <label>Name</label>
    <div>
        <InputText class="form-control" @bind-Value="chat.Name" />
        <ValidationMessage For="@(() => chat.Name)" />
    </div>
</div>

@*  <div class="form-group">
        <label>IsGroup</label>
        <div>
            <InputCheckbox @bind-Value="chat.IsGroup" />
            <ValidationMessage For="@(() => chat.IsGroup)" />
        </div>
    </div> *@

<div class="form-group">
    <label>IsModerated</label>
    <div>
        <InputCheckbox @bind-Value="chat.IsModerated" />
        <ValidationMessage For="@(() => chat.IsModerated)" />
    </div>
</div>

@* <div class="form-group">
        <label>CreatedAt</label>
        <div>
        <InputDate class="form-control" @bind-Value="chat.CreatedAt" />
        <ValidationMessage For="@(() => chat.CreatedAt)" />
        </div>
    </div> *@

@* <div class="form-group">
        <label>UpdatedAt</label>
        <div>
        <InputDate class="form-control" @bind-Value="chat.UpdatedAt" />
        <ValidationMessage For="@(() => chat.UpdatedAt)" />
        </div>
    </div> *@
<table>
    <tr>
        <th>chat</th>
    </tr>
    @if (registro == null)
    {
        <p>  buscando .... </p>
    }
    else if (registro.Count == 0)
    {
        <p> no hay registros cargados</p>
    }
    else
    {
        @foreach (var reg in registro)
        {
            <tr>
                <td>@reg.Name</td>
                <td>@reg.IsGroup</td>
                <td>@reg.IsModerated</td>
                <td>
                    <a class="btn btn-primary"
                       href="/chat/editar/{registro.Id}">
                        Editar
                    </a>
                </td>
                <td>
                    <button class="btn btn-primary" type="submit">Aceptar</button>
                    @*  <button class="btn btn-danger"
                            @onclick="() => Borrar(reg)">
                        Borrar
                    </button> *@
                </td>

            </tr>
        }
    }
</table>
<br />
<p>@mensaje</p>

@code {
    List<ListaChatDTO>? registro;
    string mensaje = "";


    private ChatDTO chat = new ChatDTO();
    string Mensaje = "";

    private async Task Editar()
    {
        var respuesta = await http.Put<ChatDTO, long>("api/chat", chat);
        if (!respuesta.Error)
        {
            navHttp.NavigateTo("/chat");
        }
        else
        {
            //var body = await respuesta.HttpResponseMessage.Content.ReadAsStringAsync();
            Mensaje = respuesta.OptenerError();
        }
    }

    private async Task Cancelar()
    {
        navHttp.NavigateTo("/chat");
    }
}